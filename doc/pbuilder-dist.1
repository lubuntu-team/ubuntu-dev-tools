.TH PBUILDER\-DIST 1 "January 10, 2008" "ubuntu-dev-tools"

.SH NAME
pbuilder\-dist, cowbuilder\-dist \- multi-distribution pbuilder/cowbuilder wrapper

.SH SYNOPSIS
\fBpbuilder\-dist\fP \fIdistribution\fR [\fIarchitecture\fR] [\fBmainonly\fP]
\fIoperation\fR [\fI...\fR]

\fBcowbuilder\-dist\fP \fIdistribution\fR [\fIarchitecture\fR] [\fBmainonly\fP]
\fIoperation\fR [\fI...\fR]

.SH DESCRIPTION
\fBpbuilder\-dist\fP is a wrapper that makes it easy to use pbuilder with many different 
versions of Ubuntu and/or Debian. 
.PP
It is common to symlink this script in order to give it many names in the form of
\fBpbuilder\-\fIdistribution\fP\fR or \fBpbuilder\-\fIdistribution\fR\-\fIarchitecture\fP\fR,
like for example \fBpbuilder\-feisty\fP, \fBpbuilder\-sid\fP, \fBpbuilder\-gutsy\-i386\fP, etc.
.PP
The same applies to \fBcowbuilder\-dist\fP, which uses cowbuilder. The main
difference between both is that pbuilder compresses the created chroot as a
a tarball, thus using less disc space but needing to uncompress (and possibly
compress) its contents again on each run, and cowbuilder doesn't do this.

.SH USAGE
There are many arguments listed on the synopsis; each of them, if used, has to be used exactly in
the same order as it appears there.
In case you renamed the script to \fBpbuilder\-\fIdistribution\fP\fR, do not
use the \fBdistribution\fP parameter; same with \fBi386\fP / \fBamd64\fP if
the name also contains \-\fIarchitecture\fR.
.TP
\fBdistribution\fP
Replace this with the codename of the version of Ubuntu or Debian you want to use.
.TP
\fBarchitecture\fP
This optional parameter will attempt to construct a chroot in a foreign
architecture.  For some architecture pairs (e.g. i386 on an amd64 install),
the chroot will be created natively.  For others (e.g. armel on an i386
install), qemu-static and binfmt-misc will be used.  Note that some
combinations (e.g. amd64 on an i386 install) require special separate
kernel handling, and may break in unexpected ways.
.TP
\fBmainonly\fP
If you specify \fBmainonly\fP, only packages from the main (in Debian) or
main and restricted (in Ubuntu) components will be used. By default, all
official components are enabled. This only has effect when creating a new
environment.
.TP
\fBoperation\fP
Replace this with the action you want \fBpbuilder\fP to do (create, update,
build, clean, login or execute).
If you don't specify any action, but the next argument is a .dsc file, it
will assume that it should build.
Check its manpage for more details.
.TP
\fB[...]\fP
.br
Replace this with other parameters, if needed.
For example, if \fBbuild\fP is the option, you will need to also specify
a .dsc file. As a special feature, if you specify a .dsc file you can
skip the \fBbuild\fP option and this script will automatically assume that
building is the action you want to do.
.br
You may also specify \fB--debug-echo\fP so that the \fBpbuilder\fP/
\fBcowbuilder\fP command which would normally be executed is just printed
on the standard output instead. This is useful for debugging
\fBpbuilder-dist\fP.

.SH EXAMPLES
.TP
pbuilder\-dist gutsy create
Creates a \fBpbuilder\fP environment for Ubuntu Gutsy, with all components enabled.
.TP
pbuilder\-sid mainonly create
Creates a \fBpbuilder\fP environment for Debian Sid, with only the main component.
.TP
pbuilder\-feisty build ./sample_1.0\-0ubuntu1.dsc
Builds the specified package on an already existing Ubuntu Feisty environment.
.TP
pbuilder\-dist feisty withlog build ./sample_1.0\-0ubuntu1.dsc
Same as above, but stores \fBpbuilder\fP's output on a file.
.TP
pbuilder\-etch i386 update
Updates an existing i386-architecture Debian Etch environment on an amd64 system.
.TP
cowbuilder-experimental create
Creates a \fBcowbuilder\fP environment for Debian Experimental.

.SH FILES AND ENVIRONMENT VARIABLES
By default, \fBpbuilder\-dist\fP will store all the files it generates in
\fB~/pbuilder/\fP. This can be changed by setting the $PBUILDFOLDER global
variable. If the directory doesn't exist, it will be created on the run.
.PP
A file with the log of the last operation, called last_operation.log, will be
saved in the results subdirectory of each build environment.
.PP
The default authentication method is \fBsudo\fP. You can change this by
setting the $PBUILDAUTH variable.

.SH BUGS
If you experience any problem with this script contact me on rainct@ubuntu.com
or file a bug at https://bugs.launchpad.net/ubuntu/+source/ubuntu-dev-tools.
.PP
Please ensure first that the problem is really this script and not an issue
with \fBpbuilder\fP or \fBcowbuilder\fP themselves.

.SH SEE ALSO
\fBpbuilder\fR, \fBpbuilderrc\fR, \fBcowbuilder\fR

.SH AUTHORS
\fBpbuilder\-dist\fP was written by Siegfried-A. Gevatter <rainct@ubuntu.com>
and includes patches by Iain Lane <iain@orangesquash.org.uk>. This manual page
has been written by Siegfried-A. Gevatter <rainct@ubuntu.com>.

\fBpbuilder\-dist\fP is released under the GNU General Public License, version
2 or later.
